user nginx;
worker_processes  auto;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;
events {
    worker_connections  1024;
}
http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

	# 백엔드 upstream 설정
    # upstream myweb-api {
    #     server api:8080;
    # }

    upstream was-server {
        server was-container-blue:8080;
    }

    server {
        listen 80;
        server_name www.metaspaces.shop;
        location / {
            return 301 https://www.metaspaces.shop$request_uri;
        }
    }

    server {
        listen 443 ssl;
        server_name www.metaspaces.shop;

        ssl_certificate /etc/ca-certificates/fullchain.pem;
        ssl_certificate_key /etc/ca-certificates/privkey.pem;

        location / {
            add_header 'Access-Control-Allow-Origin' 'https://www.metaspaces.shop' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, DELETE, PUT';
            add_header 'Access-Control-Allow-Headers' '*';
            add_header 'Access-Control-Allow-Credentials' 'true';
            
            proxy_pass         http://was-server/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    }

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    keepalive_timeout  65;
    # include /etc/nginx/conf.d/*.conf;
}